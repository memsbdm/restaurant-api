// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: menu.sql

package repository

import (
	"context"

	"github.com/google/uuid"
)

const createMenu = `-- name: CreateMenu :one
INSERT INTO  menus (name, is_active, restaurant_id)
VALUES ($1, $2, $3)
RETURNING id, created_at, updated_at, name, is_active, restaurant_id
`

type CreateMenuParams struct {
	Name         string
	IsActive     bool
	RestaurantID uuid.UUID
}

func (q *Queries) CreateMenu(ctx context.Context, arg CreateMenuParams) (Menu, error) {
	row := q.db.QueryRow(ctx, createMenu, arg.Name, arg.IsActive, arg.RestaurantID)
	var i Menu
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.IsActive,
		&i.RestaurantID,
	)
	return i, err
}

const menuExistsForRestaurantID = `-- name: MenuExistsForRestaurantID :one
SELECT EXISTS ( 
SELECT 1
FROM menus
WHERE restaurant_id = $1
AND is_active = TRUE
LIMIT 1
)
`

func (q *Queries) MenuExistsForRestaurantID(ctx context.Context, restaurantID uuid.UUID) (bool, error) {
	row := q.db.QueryRow(ctx, menuExistsForRestaurantID, restaurantID)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}
